name: Deploy Fullstack App to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # FRONTEND
      - name: Install frontend dependencies
        run: npm install --legacy-peer-deps

      - name: Build React app
        run: npm run build

      - name: Deploy frontend to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_HOST }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          source: "build"
          target: "/var/www/website-ts"
          strip_components: 1
          debug: true

      # BACKEND
      - name: Install backend dependencies
        working-directory: backend
        run: npm install

      - name: Build backend (TypeScript â†’ JavaScript)
        working-directory: backend
        run: npx tsc -p tsconfig.backend.json

      - name: Deploy compiled backend to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_HOST }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          source: "backend/dist"
          target: "/${{ secrets.HOSTINGER_HOST }}/backend/dist"
          strip_components: 2

      - name: Deploy backend config files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_HOST }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          source: "backend/package.json"
          target: "/${{ secrets.HOSTINGER_HOST }}/backend"

      - name: Deploy backend config files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_HOST }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          source: "backend/package-lock.json"
          target: "/${{ secrets.HOSTINGER_HOST }}/backend"

      # Upload .env securely from GitHub Secrets
      - name: Upload .env from secret
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_HOST }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            echo "${{ secrets.HOSTINGER_ENV_CONTENT }}" > /${{ secrets.HOSTINGER_HOST }}/backend/.env

      # Generate PM2 ecosystem.config.js on VPS
      - name: Generate PM2 config on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_HOST }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            echo "module.exports = {
              apps: [
                {
                  name: 'backend',
                  script: './dist/main.js',
                  cwd: '/${{ secrets.HOSTINGER_HOST }}/backend',
                  instances: 1,
                  autorestart: true,
                  watch: false,
                  max_restarts: 10,
                  env: {
                    NODE_ENV: 'development'
                  },
                  env_production: {
                    NODE_ENV: 'production'
                  }
                }
              ]
            };" > /${{ secrets.HOSTINGER_HOST }}/backend/ecosystem.config.js

      # Optional: Confirm ecosystem.config.js exists
      - name: Confirm PM2 config exists
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_HOST }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            ls -la /${{ secrets.HOSTINGER_HOST }}/backend/ecosystem.config.js
            cat /${{ secrets.HOSTINGER_HOST }}/backend/ecosystem.config.js

      # Restart backend and Nginx using PM2
      - name: Restart services with PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_HOST }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            cd /${{ secrets.HOSTINGER_HOST }}/backend
            npm install
            pm2 start ecosystem.config.js --env production
            pm2 save
            sudo systemctl restart nginx

      # Optional: Health check backend
      - name: Check backend health
        run: curl -f http://${{ secrets.HOSTINGER_HOST }}:3001/health || exit 1

      # Optional: Clear PM2 logs
      - name: Flush PM2 logs
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_HOST }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            pm2 flush
