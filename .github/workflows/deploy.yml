name: Deploy Fullstack App to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # üîÑ Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v3

      # üõ† Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # ============================
      # üî∑ FRONTEND BUILD & DEPLOY
      # ============================

      - name: Install dependencies (frontend + backend)
        run: npm install --legacy-peer-deps

      - name: Build React app
        run: npm run build

      - name: Check frontend build output
        run: ls -la build

      - name: Deploy frontend to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          source: "build"
          target: "/var/www/website-ts"
          strip_components: 1
          debug: true

      # ============================
      # üî∂ BACKEND BUILD & DEPLOY
      # ============================
      - name: Run backend:build script
        run: npm run backend:build

      - name: Build backend (TypeScript ‚Üí JavaScript)
        run: npx tsc -p backend/tsconfig.backend.json

      - name: Check backend build output
        run: ls -la backend/dist

      - name: Deploy compiled backend to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{secrets.HOSTINGER_USER}}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          source: "backend/dist"
          target: "/root/backend"
          strip_components: 1
          debug: true

      # ============================
      # üîê BACKEND CONFIG & ENV
      # ============================

      - name: Deploy root package.json
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{secrets.HOSTINGER_USER}}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          source: "package.json"
          target: "backend"
          debug: true

      - name: Deploy backend .env
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{secrets.HOSTINGER_USER}}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          source: ".env"
          target: "backend"
          debug: true

      # ============================
      # ‚öôÔ∏è PM2 CONFIG
      # ============================

      - name: Install dependencies on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{secrets.HOSTINGER_USER}}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            cd /root/backend
            npm install

      - name: Generate PM2 config on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{secrets.HOSTINGER_USER}}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            echo "module.exports = {
              apps: [
                {
                  name: 'backend',
                  script: './dist/main.js',
                  cwd: '/root/backend',
                  instances: 1,
                  autorestart: true,
                  watch: false,
                  max_restarts: 10,
                  env: {
                    NODE_ENV: 'production',
                    PORT: 4000
                  },
                  env_production: {
                    NODE_ENV: 'production'
                  }
                }
              ]
            };" > /root/backend/ecosystem.config.js

      # ============================
      # üîÅ RESTART SERVICES
      # ============================

      - name: Restart backend and Nginx using PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{secrets.HOSTINGER_USER}}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            cd /root/backend
            pm2 start ecosystem.config.js --env production
            pm2 save
            sudo systemctl restart nginx

      # ============================
      # ‚úÖ HEALTH CHECK
      # ============================

      - name: Check backend health
        run: curl -f http://${{ secrets.HOSTINGER_HOST }}:4000/health || exit 1

      # ============================
      # üßπ CLEANUP LOGS
      # ============================

      - name: Flush PM2 logs
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{secrets.HOSTINGER_USER}}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            pm2 flush
